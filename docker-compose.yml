services: 
  web-app:
    build:
      context: .
    volumes:
      - vault:/vault/books
    restart: unless-stopped
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000 & uvicorn service.asgi:application --host 0.0.0.0 --port 8001 --reload"
    depends_on:
      - redis
      - postgres
    mem_limit: 1G
    memswap_limit: 1G
    cpu_count: 1
    pids_limit: 128
    ulimits:
      nofile:
        soft: 32768
        hard: 32768

  redis:
    image: redis:7.0.5-alpine
    restart: unless-stopped
    hostname: redis
    volumes:
      - vault:/vault/books
    mem_limit: 1G
    memswap_limit: 1G
    cpu_count: 1
    pids_limit: 128
    ulimits:
      nofile:
        soft: 8192
        hard: 8192
  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    restart: unless-stopped
    command: -A celery_app.app worker --loglevel=info
    volumes:
      -  vault:/vault/books
      - ./service/db:/service/db
    env_file:
      - .env
    links:
      - redis
      - web-app
    depends_on:
      - redis
      - web-app
    mem_limit: 1G
    memswap_limit: 1G
    pids_limit: 2048
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
  worker-cleaner:
    build:
      context: .
    hostname: worker_cleaner
    entrypoint: celery
    restart: unless-stopped
    command: -A celery_app.app beat --loglevel=info
    volumes:
      - vault:/vault/books
      - ./service/db:/service/db
    env_file:
      - .env
    links:
      - redis
      - web-app
    depends_on:
      - redis
      - web-app
    mem_limit: 1G
    memswap_limit: 1G
    pids_limit: 512
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
  nginx:
      restart: unless-stopped
      build:
          context: .
          dockerfile: nginx.Dockerfile
      environment:
          - SERVER_PORT=${SERVER_PORT}
      ports:
          - ${SERVER_PORT}:80
      depends_on:
          - web-app
          - worker
          - redis
      mem_limit: 1G
      memswap_limit: 1G
      cpu_count: 1
      pids_limit: 128
      ulimits:
        nofile:
          soft: 8192
          hard: 8192
  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Qw3rty
      POSTGRES_DB: fast_api
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d fast_api" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

volumes:
    vault:
    pgdata:
      driver: local
